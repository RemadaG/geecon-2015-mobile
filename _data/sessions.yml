-
  id: 670
  title: "The Future of Java is Today"
  description: "The Java platform experiences an outburst of cool new features – new features added to the Java language include multi-line string literals, simple data carriers and pattern matching. Many library and Java Virtual Machine features were added as well, and many more features are in the pipeline and are actively worked on. This includes value classes for the Java virtual machine, and ability to interconnect Java and native code. These features are delivered quickly, thanks to the recently adopted, predictable, six-months schedule of major Java SE releases. This new release cadence means new Java platform features are delivered twice every year! In this talk, we will show a live demo of many of the recently added and newly developed features and improvements for the Java platform."
  language: ""
  speakers: [janlah]
-
  id: 671
  title: "What you can expect from Spock 2?"
  description: "Spring 2021 - long awaited - Spock 2.0 has been finally released. Heavily rewritten to leverage JUnit Platform (a crucial part of JUnit 5) is ready for even better testing in your projects.
<br><br>
However, what about the support for Groovy 3 and Java 14+? Is Spock compatible with a brand new Groovy 4 and Java 17+? Could the parametrized tests be even better? How problematic will it be to migrate existing tests from Spock 1.3 (especially those using JUnit 4's rules)? What other new features and breaking changes are expected in 2.x?
<br><br>
During this talk, I will summarize over 2 years of development, explaining if/how it impacts the status quo (Spock 2 vs JUnit Jupiter 5) presented by me three years ago."
  language: ""
  speakers: [marzaj]
-
  id: 672
  title: "Evolving your APIs, a pragmatic approach"
  description: "When you publish your first HTTP API, you’re more focused on short-term issues than planning for the future. However, chances are you’ll be successful, and you’ll “hit the wall”. How do you evolve your API without breaking the contract with your existing users? In this talk, I’ll first show you some tips and tricks to achieve that: moving your endpoints, deprecating them, monitoring who’s using them, and letting users know about the new endpoints. The talk is demo-based, and I’ll use the Apache APISIX project for it."
  language: ""
  speakers: [nicfra]
-
  id: 674
  title: "The 7 deadly sins in Kubernetes"
  description: "Let us jump on that Kubernetes train. It is just another tool for running my apps. Right? ... Wrong!!! As Kubernetes becomes mainstream established companies want to benefit from the advantages Kubernetes brings in, too. However, a lot of them underestimate the technical and organizational implications they will face. What happens if you do not care about Resource Requests and Limits? Why do you lose data because of the Shell Form in your Dockerfiles? Why do you have to reconsider how to scale your apps? Why will Kubernetes change your organizational architecture? Why do lots of projects start with one cluster and end up with lots of them? This talk will help you understand the pitfalls of not caring about best practices in Kubernetes. You will hear war stories about failed migration projects and learn how to be successful with yours."
  language: ""
  speakers: [hubstr]
-
  id: 675
  title: "Scaling Engineering by Hacking Conway's Law"
  description: "Working in a fast-growing company that doubles in size every year, maintaining the quality of products and engineers is a very challenging task. In this talk I will describe how Wix org structure evolved from functional teams to gangs, cross-functional teams responsible for end-to-end delivery; guilds, professional groups responsible for methodology, best practices, and training; and mini-companies that serve as internal startups to support rapid growth while maintaining velocity. Unlike many implementations of the Guild structure, at Wix the guilds are operational guilds that are involved in the day to day life of a developers throughout their journey at the company. I will also discuss how we poured our culture into a game-like “guild day”, that helps us maintain alignment, keep the high quality of our work and people, share knowledge, recruit and preserve the best developers, and support a quality-based culture of innovation."
  language: ""
  speakers: [avimor]
-
  id: 676
  title: "Why you don't need to worry about scaling your Java webapp"
  description: "When writing new Java (web) applications, teams often have some nagging scaling doubts: <br>
* How many users can my application simultaneously handle? <br>
* How fast will my Java app dash out those JSON responses? <br>
* How much memory does my application need? Do I need to worry about garbage collection? <br>
* How much money do I need to spend on hosting? How do I even know how powerful my AWS, VPS or bare-metal machine is? <br>
* Couldn't I just run my whole app on my https://www.raspberrypi.org/[Raspberry Pi]? <br>

Surprisingly, there's very little advice out there on how to sensibly approach these questions in a practical way- apart from that deceiving gut-feeling which tells you that everything will be fine, by simply auto-scaling your Kubernetes pods into oblivion. In this #almostnoslides session we're going to use a terminal, an IDE and a couple of other tools to get a deep, practical understanding of the following scaling topics: <br>
* Latency: How your Java webapp would compare to a Counterstrike game server and what to expect <br>
* Memory: How little memory your application actually needs <br>
* Throughput: How to find out to how many users your application will scale to <br>
* External Systems & Garbage Collection: What to do about the supposed performance killers <br>
* Servers: What the cheapest Hetzner server can do for you By the end of this talk, you'll have learned all the needed tools & processes that make you never worry about scale again."
  language: ""
  speakers: [marbeh]
-
  id: 677
  title: "Design a Scalable Product & Engineering Methodology - Only Dead Fish Go with the Flow"
  description: "Are you bored of hearing about Spotify’s Model, Basecamp’s Shape Up, or Netflix’s “No Rules Rules”? All of them do have something in common. They tailored something unique to match both their ambition and their strengths, while honestly acknowledging their weaknesses. Well, so did we. Our VP Of Engineering joined a 100+ engineering team and embarked on a mission to make it scalable. Listen to Ataccama's story and find something to inspire you…because only dead fish go with the flow. SpaceUP - Our Journey to Create a Unique and Scalable Product Organization. More @ https://medium.com/ataccama-spaceup target group: Product & Engineering leaders, Directors, C-Levels - takeaways - how to build a scalable product & engineering organization, the journey of a company growing from 100 to almost 300 people in engineering the goal of the talk: Don't follow the crowd, do your thing - as we did."
  language: ""
  speakers: [rompic]
-
  id: 678
  title: "Web 3.0 through the eyes of JVM dev"
  description: "The recipe for a basic web application is simple: front end, back end and the datastore. Nobody ever gets fired for implementing microservices, but it can be a lot of hassle to set them up and keep them running. Wouldn’t it be simpler to let your code live with your data in the blockchain? During this talk we will use Smart Contracts to build a simple resource tracking system and deploy it to the testnets of popular blockchains - Ethereum and Flow. We will compare it to building a Spring based application hosted in AWS to figure out which one is faster to build, easier to manage and cheaper to run. Code snippets will be presented in Solidity and Cadence in a format that doesn’t assume any prior knowledge of these languages. Repositories: [the first](https://github.com/mrydzy/bbi-eth) and [the second one](https://github.com/mrydzy/bbi-cadence)."
  language: ""
  speakers: [majryd]
-
  id: 679
  title: "How to Survive a Live Coding Session"
  description: "I really enjoy giving live coding talks. They let me demonstrate concrete usages of a tool or library that work, rather than 'almost work, but...'. Although the opinions vary, I'd argue that it's possible to deliver an awesome live coding talk - provided that you come well prepared. Having already given a couple of live coding sessions, I'd like to share the lessons I've learned. If you're planning to prepare you own live coding session, the tips&tricks presented here will help you feel more comfortable and prepared for (almost) everything. Real-life horror stories included!"
  language: ""
  speakers: [jackun]
-
  id: 680
  title: "Spectacles on steroids - modern observability for cloud apps"
  description: "Modern-day distributed systems are anything but simple. Schedulers, sidecars, dynamic routing, server-side discovery, proxied connections - all these (useful) concepts increase the operational complexity for such activities as: identifying where an issue propagates from, tracing request's processing graph, nailing down the root cause of the problem. Not even mentioning the proactive early warning - detecting an inevitable issue before it escalates. This session will be dedicated to modern telemetry and how it can be implemented in the cloud (on AWS). We'll traverse all the pillars of observability (centralized logs, metrics, SIEM, distributed tracing) and how they are supported with managed, ready-to-use services (CloudWatch, X-Ray, CodeGuru). We'll take a look at the integration with popular OSS products (Grafana, Prometheus, OpenTelemetry) and we'll draft some reference telemetry architectures for distributed applications in the cloud."
  language: ""
  speakers: [sebgeb]
-
  id: 681
  title: "The End of the Data Ice Age"
  description: "Why in the third decade of the 21st century, after 80 years of writing software, data continues to live in two states, hot data in the compute space and cold data in the persistence state? Of course, data is created and manipulated while in a hot state. Ideally, all data would exist entirely in a hot state when you think about it. However, the reality is that due to the way most computers work, it is necessary to keep only the data that is actively in use in a hot state and push all inactive data out to a cold state persistence layer. This hot and cold data perspective raises the question of why is it that at the software level, we still have to focus so much attention and effort on dealing with the movement of data between these two states. In this talk, we will examine what has led us to this point, why we seem to be stuck here and look at some possibilities for moving forward. You also see a real example of a live hot state software approach that inspired this rant and line of thought about seeing data in a hot and cold state way and the profound impact on how we develop software."
  language: ""
  speakers: [hugmck]
-
  id: 682
  title: "CompletableFuture and its Quirks"
  description: "CompletableFuture revolutionised asynchronous processing in Java. Unfortunately, it’s full of quirks, traps, and surprises… during this live coding session, we’ll have a look at things like: thread pools backing task execution, exception propagation, cancellations, and unintuitive methods from the public API."
  language: ""
  speakers: [grzpiw]
-
  id: 683
  title: "My understanding of DDD & Clean Architecture on the example of "The Three Little Pigs""
  description: "DDD and Clean Architecture are nothing new. There are plenty of learning materials in the topic. Books, online courses, conference talks to name a few… However, sometimes I had problems understanding the example domain, presented in the material. That's why I decided to go with my own example with a well-known domain. Domain I'm able to explain to my little son. Let's check 'The Three Little Pigs' fairy tale built with DDD and Clean Architecture. This presentation is for people knowing at least a bit about DDD and Clean Architecture and wanting to see the example implementation. The code is in Java."
  language: ""
  speakers: [matchr]
-
  id: 684
  title: "How to keep your flame burning – on burn-out and its prevention"
  description: "According to World Health Organization every 2nd person will experience burnout at least once in a lifetime. And since preventing it is much less costly than curing, it is worthwhile to check-up on yourself by answering following questions: <li>Have you lately had a hard time getting up to work? </li><li>Has your job been overwhelming you so much that you lost your temper? </li><li>Have you been making cynical comments about your co-workers or clients? </li><li>Have you lost your drive and secretly fear that you are finished in your profession?</li>  If you answered “yes” to at least 2 of those questions, there is a chance you’re on the edge of a job burn-out. If you want to learn more about one of the most common occupational syndromes of modern days and find out how to prevent it, join my speech."
  language: ""
  speakers: [alebla]
-
  id: 685
  title: "Java Flightplan: Where am I, where am I going and how do I get there?"
  description: "To define where you want to go, first, you need to see where you are. The next step would be to define a plan. Let's discuss a strategy that supports corporations in the adoption of cloud technologies. With several options of cloud services and the different architectures such as multi-cloud and hybrid-cloud, how can Java applications be modernized or developed as a cloud-native solution? Within the Flightplan, we'll discuss the different levels of maturity in cloud adoption and share a guide that will help you avoid targeting too ambitious goals or too conservative and less effective actions. We'll also fly through the application lifecycle management with discussions about lifecycle automation - fast delivery is not a sign that your app lifecycle is on a good path! By the end of this talk, you'll have extra knowledge about technologies, practices, and concepts that you can adopt to support your cloud adoption journey with Java applications!"
  language: ""
  speakers: [otasan]
-
  id: 686
  title: "Extending Real-time Data and Compute to the Cloud, Edge, and beyond"
  description: "What will the future of the Cloud and Edge look like for us as developers? We have great infrastructure nowadays, but that only solves half of the problem. The Serverless developer experience shows the way, but it’s clear that FaaS is not the final answer. What we need is a programming model and developer UX that takes full advantage of new Cloud and Edge infrastructure, allowing us to build general-purpose applications, without needless complexity. What if you only had to think about your business logic, public API, and how your domain data is structured, not worry about how to store and manage it? What if you could not only be serverless but become “databaseless” and forget about databases, storage APIs, and message brokers? Instead, what if your data just existed wherever it needed to be, co-located with the service and its user, at the edge, in the cloud, or in your own private network—always there and available, always correct and consistent? Where the data is injected into your services on an as-needed basis, automatically, timely, efficiently, and intelligently. Services, powered with this “data plane” of application state—attached to and available throughout the network—can run anywhere in the world: from the public Cloud to 10,000s of PoPs out at the Edge of the network, in close physical approximation to its users, where the co-location of state, processing, and end-user, ensures ultra-low latency and high throughput. Sounds exciting? Let me show you how we are making this vision a reality building a distributed real-time Data Plane PaaS using technologies like Akka, Kubernetes, gRPC, Linkerd, and more."
  language: ""
  speakers: [jonbon]
-
  id: 687
  title: "What the CRaC - Lightning fast JVM startup"
  description: "In a world where microservices are more and more a standard architecture for Java based applications running in the cloud, the JVM warmup time can become a limitation. Especially when you look at spinning up new instances of an app as response to changes in load, the warmup time can be a problem. Native images are one solution to solve these problems because their statically ahead of time compiled code simply doesn’t have to warmup and so has short startup time. But even with the shorter startup time and smaller footprint it doesn’t come without a drawback. The overall performance might be slower because of the missing JIT optimizations at runtime. There is a new OpenJDK project called CRaC (Coordinated Restore at Checkpoint) which goal it is to address the JVM warmup problem with a different approach. The idea is to take a snapshot of the running JVM, store it in files and restore the JVM at a later point in time (or even on another machine). This session will give you a short overview of the CRaC project and shows some results from a proof of concept implementation."
  language: ""
  speakers: [gergru]
-
  id: 688
  title: "Jakarta EE 10 is Coming Your Way"
  description: "Jakarta EE 9 lowered the barriers of entry and established a foundation for future innovation paving the way for Jakarta EE 10. With Jakarta EE 10, we introduced Jakarta EE Core Profile which targets smaller runtimes suitable for microservices. The Jakarta EE Core Profile also aims to be an even better fit for compiling to native images. But it does not stop there. Both Jakarta EE Web Profile and Jakarta EE Platform is moving forward as well with updates to almost all the individual specifications. Join this session for the latest updates on the progress with Jakarta EE 10. I will go through what Jakarta EE 10 brings to the table, and what to expect when the specifications are moving forward. The session will also give you a clear understanding of how to migrate from previous versions of Jakarta EE and Java EE as well as show how to leverage Java SE 17 and newer features with Jakarta EE."
  language: ""
  speakers: [ivagri]
-
  id: 689
  title: "Beyond SRE World - Canary Monitoring at Scale"
  description: "As an SRE, If I have to pick one monitoring for a IT system, it will be the canary monitoring. Why? Let me explain this to you in the 'from zero to hero talk'. We will cover all the necessary details including practical examples and experience from running it in the production. You should get back from the session: <br>* What is canary monitoring? <br>* How to build it? <br>* Deep dive into the benefits <br>* Considerations and what you need to watch out for <br>* How to use the same tools beyond monitoring."
  language: ""
  speakers: [marśmi]
-
  id: 690
  title: "How to avoid common mistakes and misconceptions when working with Java on AWS Lambda"
  description: "AWS Lambda is a serverless, event-driven compute service that lets you run code for virtually any type of application or backend service without provisioning or managing servers. AWS Lambda is chosen for its flexibility, the ease of integration with other AWS Services, and reducing the amount of infrastructure you and your team own. But over time, when the number of clients and requests start to increase, and you start caring about latency, you may discover that there is no free lunch. Clients complain about latency, things you've taken for granted when running your software on EC2 or Fargate no longer apply, and costs start to ramp up. In this talk, I'm going to describe some of the lessons learned from working on multiple services backed by AWS Lambda: what are and how to reduce the cold starts, how the JVM makes them even more problematic, when AWS Lambda is more expensive than the less abstract platform, how to use provisioned concurrency and why one of the biggest problems in Computer Science (caching) is even bigger on Lambdas."
  language: ""
  speakers: [anddeb]
-
  id: 691
  title: "Resiliency by chaos: breaking your cloud system with AWS Fault Injection Simulator"
  description: "Have you ever dreamed about having an autonomous, self-healing cloud system? One, that would automatically react on unexpected situations, making you sleep well at night? If so, chaos engineering could be for you. This approach is used with good result by biggest players on the market, like Netflix, Linkedin, Google or Facebook, where resiliency is the key to keep your business successful. In this session, you are going to hear a bit about history of chaos engineering. Then, we will be discussing about typical process of stressing an application, which is following chaos engineering principles. Finally, we are going to take a look at AWS Fault Injection Simulator, fully managed service for running fault injection experiments on AWS, in action."
  language: ""
  speakers: [barpis]
-
  id: 692
  title: "Are Agile Leaders Really Wizards?"
  description: "The idea for the talk came when I had finished bedtime reading “The Lord of the Rings” trilogy to my two daughters. It took us more than a year to go through the journey of the fellowship together, with plenty of questions and digressions, some harder to even wonder about, sometimes existential. That’s why this talk will be different than others, there’ll be no programming languages but rather human language (and a small dose of elvish). Today let’s go together on an adventure and find out what does it mean to be a leader! In Middle-earth we’ll explore why it’s important to answer “why?”, what’s the difference between a good and bad leader, featuring Gandalf and Saruman (also what kind of games they were playing), what’s a diverse team, and why interns are like hobbits. There’ll also be a touch of psychology, sociology, and capitalism, plus our “industry buzzwords” like agile, senior leadership, scrum team, open-source contributions. We’ll find out where to find these in Tolkien’s fantasy world where there are no computers (unless you count palantíri as handheld peer-to-peer devices) but there’s a lot to learn from and benefit — as a leader, contributor and human being. If you are one of those, you’re welcome here (hobbits, dwarves, elves and others are welcome as well!)."
  language: ""
  speakers: [grzroz]
-
  id: 693
  title: "Say goodbye to implicits - contextual abstractions in Scala 3"
  description: "Have you ever been confused by implicits in Scala? I most certainly have. I struggled to understand them at the beginning of my Scala journey, and to this day I trip over them regularly. It doesn't help that one keyword can be used for many different things - defining Implicit parameters, implicit conversions, or type class instances. And sometimes it's so frustrating when your code doesn't compile because you can't remember the magical implicit import incantation that is needed (the problem also known as 'why does it work fine in that other file, but not here?!'). Scala 3 addresses a lot of the tricky bits in the language to make it clearer and easier to use, and luckily, implicits have also undergone a redesign. Well, to be precise... they're gone. But in their place, we're getting language constructs that do one thing and do it well. Please join me in welcoming the new keywords: 'given' and 'using', as well as context functions and extension methods. They're the new kids on the block to define our contextual abstractions, and they're here to make our code more expressive and easier to understand. Let's see them in action."
  language: ""
  speakers: [magsto]
-
  id: 694
  title: "Event Streaming for the Best of All Worlds"
  description: "When it comes to distributed, event-driven messaging systems, we usually see them supporting either one of two types of semantics: streaming, or queueing, and rarely do we find a platform that supports both. In this presentation, we’ll first get an introduction and some clarifications of event-driven versus message-driven systems, event streams, and stream processing. We’ll then take a look at Apache Pulsar which offers a very unique capability in modern, cloud-native applications and architecture, in which its platform supports both Publish-Subscribe and Message Queues, and extends into streams processing as well as performs message mediation & transformation. We will see how it works closely with and relies on Apache Bookkeeper for its durable, scalable, and performant storage of log streams, and leverages on Apache Zookeeper to manage the otherwise very complex ecosystem. We will then compare Apache Pulsar with the popular Apache Kafka platform to understand some of their key differences as to how Pulsar can overcome some of Kafka's limitations. With Pulsar's flexible architecture and cloud-native readiness, we will take a look to see how it can be integrated and work collaboratively with the popular Spring framework."
  language: ""
  speakers: [margry]
-
  id: 695
  title: "Refactoring organisations"
  description: "In our profession, we tend to reinvent the wheel. We introduce new silver bullets that promise to solve our products’ problems: aligning strategy, teams, architectural, and data processing decisions. We’ve all been there: from hundreds of microservices, introducing AI anywhere possible to vast Data Lakes swallowing all of our events. But we end up very often in silos, focusing too much on fine details without looking into a broader picture. That results in underperforming - working in silos, creating over-engineered solutions, or not delivering our business goals.\n\nHowever, several well-proven and well-explored engineering methodologies and tools can help us maximize our efforts - the autonomy of teams, architectures, and data processing they build, which boosts their productivity and quality of delivery. We’ll start with how to identify the proper business boundaries and align our teams together with them. We’ll see which ready-to-use tools we can utilize and how these affect and improve product engineering, data processing, and analytics teams - and, in the end - our overall productivity."
  language: ""
  speakers: [wojpta]
-
  id: 696
  title: "Getting Started with the Micronaut® Framework"
  description: "In this session, Sergio del Amo introduces the Micronaut® framework and demonstrates how the Framework's unique compile-time approach enables the development of ultra-lightweight Java applications. Compelling aspects of the Micronaut framework include: Develop applications with Java, Kotlin, or Apache Groovy Sub-second startup time Small processes that can run in as little as 10 MB of JVM heap No runtime reflection Dependency injection and AOP Reflection-free serialization A database access toolkit that uses ahead-of-time (AoT) compilation to pre-compute queries for repository interfaces. Cloud-native features Sergio also demonstrates how you can generate GraalVM native images of your Micronaut applications to achieve instant startup and ultra-low memory footprint. Sergio del Amo is a Micronaut core committer, Developer Advocate for the Micronaut Foundation, and host of the Micronaut podcast."
  language: ""
  speakers: [serdel]
-
  id: 697
  title: "Implementing Raft protocol with project Loom"
  description: "We are living in an age of distributed systems. And one of the most challenging problems is the consensus problem. Raft is a consensus protocol that is used in many systems like etcd and Kubernetes, Consul, Kafka, Hazelcast etc. This protocol is based on asynchronous communication between nodes in a cluster (with leader election, log replication, tolerate node failures, timeouts etc.), so we need some useful mechanisms and language features to effectively implement protocol behaviour. During the talk, we will briefly discuss the basics of Raft, and then in code, we will see how parts of the protocol can be implemented using the promising Loom project."
  language: ""
  speakers: [androd]
-
  id: 698
  title: "What the hell is service mesh anyway!?"
  description: "Over the past year, Service Mesh has emerged as a critical component of the cloud native stack. It makes communication between service instances flexible, reliable, and fast, so developers can focus on adding business value and letting the mesh does all the complex non-functional work like service discovery, load balancing, encryption, authentication, authorization, support for the circuit breaker pattern, and other capabilities. In this session we’ll provide an introduction to service mesh, starting with somehow the philosophical questions: do we really need a service mesh? what it can do and why people are interested in it ? Going it really to make all our problems disappear? We’ll also explore how it simplifies application design and also where it adds complexity. All with some demos that highlight how the new microservices architectures, as well as legacy monolith applications, could benefit from service mech!"
  language: ""
  speakers: [mohabo]
-
  id: 699
  title: "Hazelcast 5.1 - The Hitchhiker's Guide"
  description: "Most of you probably heard about distributed caching being the most common application of Hazelcast – but I bet not many of you heard about CRDTs, HyperLogLog, CP Subsystem, or real-time stream processing. During this talk, we’ll go for a quick journey around Hazelcast’s ecosystem, revisit basic functionality, and have a look at some of its hidden flavours. Even if that’s way too much for your use case, there’s still a lot for an engineer to learn from studying these concepts."
  language: ""
  speakers: [grzpiw]
-
  id: 700
  title: "Techniques for a faster JVM start-up"
  description: "During this session, I will discuss a few techniques about how to improve the JVM start-up time for any application running on the JVM, independent of the programming language. These techniques could be applied in any project, in general without code changes. You can use the same techniques to speed up the JVM start-up time for your applications (both in development and production environments). Main topics: 
<br> - when the JVM start-up matters (i.e. for what types of applications) 
<br> - Application/Dynamic class-data sharing in HotSpot JVM 
<br> - shared class cache in Eclipse OpenJ9 
<br> - few handy JVM flags 
<br>- hands-on demonstration (including benchmarks results)
<br> - (optional) Ahead-of-time (AOT) compilation The JVMs included in this talk are OpenJDK HotSpot, Eclipse OpenJ9 and Graal VM"
  language: ""
  speakers: [ionbal]
-
  id: 701
  title: "Vertex AI: Pipelines for your MLOps workflows"
  description: "In recent years, one of the biggest trends in applications development has been the rise of Machine Learning solutions, tools, and managed platforms. Vertex AI is a managed unified ML platform for all your AI workloads. On the MLOps side, Vertex AI Pipelines solutions let you adopt experiment pipelining beyond the classic build, train, eval, and deploy a model. It is engineered for data scientists and data engineers, and it’s a tremendous help for those teams who don’t have DevOps or sysadmin engineers, as infrastructure management overhead has been almost completely eliminated. Based on practical examples we will demonstrate how Vertex AI Pipelines scores high in terms of developer experience, how fits custom ML needs, and analyze results. It’s a toolset for a fully-fledged machine learning workflow, a sequence of steps in the model development, a deployment cycle, such as data preparation/validation, model training, hyperparameter tuning, model validation, and model deployment. Vertex AI comes with all standard resources plus an ML metadata store, a fully managed feature store, and a fully managed pipelines runner. Vertex AI Pipelines is a managed serverless toolkit, which means you don't have to fiddle with infrastructure or back-end resources to run workflows."
  language: ""
  speakers: [markod]
-
  id: 702
  title: "Practical ways to reduce Google Cloud costs"
  description: "Costs are the major concern of the 'Day-2' operation in the cloud. On Google Cloud, there is several ways to optimize, reduce the costs. And also to limit the expenses and the mistakes that can involve huge billing This session presents many tips and tricks to reduce the costs: free tiers, recommender, quotas, limits, auto-shutdown,..."
  language: ""
  speakers: [guibla]
-
  id: 704
  title: "Quarkus: Supersonic Subatomic Java"
  description: "Quarkus makes it possible to write Java web applications ready to serve requests less than 20 milliseconds after start and occupying less than 20 MB of memory. At the same time, its programming model feels much like the one of a traditional application server: There is persistence with JPA, JAX-RS for REST, CDI, transactions, all MicroProfile specifications and even a compatibility layer for some Spring APIs. Come and see how Quarkus makes all the above possible on top of GraalVM using a new technique called Compile Time Boot. Learn how exactly Quarkus eliminates runtime costs and how it circumvents the limitations of GraalVM. An 8 ms demo will be included."
  language: ""
  speakers: [micszy]
-
  id: 705
  title: "Valhalla: codes like Object, but behaves like int."
  description: "Java has been around for over 25 years. Some say that it’s a little fusty. Meanwhile, it evolved significantly, and much more is coming in the near future! During the presentation we will dig into one of the biggest changes, that is coming with one of the future releases.
One of the biggest Java criticisms is its memory management. There are light primitives and heavy objects. As a developer, you can use primitives, but you can’t create your own. There are generic types for objects, but not for primitives. Project Valhalla is trying to address that problem. In what way? What does it mean for developers? What does it mean for frameworks like Spring, JUnit, and many others? What is changing under the hood? During the presentation, we'll explore all these areas!"
  language: ""
  speakers: [arksok]
-
  id: 706
  title: "OOP revisited"
  description: "There are many programming paradigms. One of them is the object oriented programming. But... Do you really take advantage of it? Are you brave enough to say that you have real 'objects' in your project? Having classes and creating something from them is not enough... Have you heard about SOLID or GRASP principles? Let's investigate those and some other rules to make your code really object oriented."
  language: ""
  speakers: [domprz]
-
  id: 707
  title: "Objective swiss army knife"
  description: "Your current project is old, tech leader even older, and design was lost? Don't wait for another greenfield project. Code cleaner, and in a more objective way right here, right now. I will demonstrate a few ready to use techniques/recipes/patterns that will make your code better, more readable, and, most importantly, more satisfying. Demonstrated techniques will be objective design oriented and fit in almost every codebase no matter how old, neglected, complex, and tangled."
  language: ""
  speakers: [marhar]
-
  id: 708
  title: "Gamedev through the eyes of a backend engineer"
  description: "Finance, insurance, telecommunications, e-commerce, gamedev - all is just development, right? During this presentation, I’ll show you what surprised me after transitioning to a full-time gameplay programmer from a backend Scala engineer. Surprisingly, it’s a whole new world with unique structures, tools, and quirks. We’ll touch upon things like: game engines as frameworks - what’s it like to write code in Unreal Engine, how their C++ code is actually not that big of a deal to write what to use for version control if git is not good enough how Steam is used in internal development and why you can see Cyberpunk uploads while there are no patches released yet how gameplay mechanics are tested typical team structures … and many more If you ever wonder about any of that, this presentation will be of interest to you."
  language: ""
  speakers: [robpiw]
-
  id: 709
  title: "How to boost your engineering creativity and be more productive"
  description: "Technology leaders often strive to build creative teams. However, nowadays it may be a challenging task to achieve, especially in a distributed workplace and a hybrid operational mode. Can Agile be the answer to this difficulty? Does the Agile boost creativity? Will creative mindset help in the Agile transformations? In this short talk I will shed the light on challenges that I faced when building Agile teams and solutions I found to increase team’s creativity and productivity."
  language: ""
  speakers: [tomman]
-
  id: 710
  title: "A testable architecture"
  description: "An application can only be tested successfully using test automation and executable specifications if the architecture is testable.
<br>
The tests must be fast, reliable, and offer good diagnosis precision. They must also be easy to write, maintain, and execute.
<br>
Tests without these properties will be abandoned and the effort creating them will be lost.
<br>
In this session you will see one battle proven example where I have used executable examples and ended up with a testable architecture as well as living documentation.



Takeaways<br>
* With the proper approach, ending up with a testable architecture is doable and fun
<br>* Outside-in development supports test automation
<br>* Re-using executable examples is not too hard when it is implemented properly.
"
  language: ""
  speakers: [thosun]
-
  id: 711
  title: "Modern Java Microservices in the Cloud!"
  description: "It's 2022, long gone are the days of ceremony and Java development should be productivity, simplicity. Let's look at how we make it happen, in context of startup going FAST. I will describe the architectural approach we use stack we use, and what, sometimes unorthodox, technology and design choices we have made, and their consequences.

Expect: code samples, why does our stack look the way it looks AND… what have we learnt in the process. It's all going to be Revolut-based!"
  language: ""
  speakers: [andgrz]
-
  id: 712
  title: "Lunch - room 5"
  description: "Chicken filet in paprika sauce + rice + salad"
  service: "true"
  language: ""
-
  id: 713
  title: "Lunch - room 3"
  description: "Vegies in delicate curry sauce on coconut milk + rice"
  service: "true"
  language: ""
-
  id: 721
  title: "Lunch - room 7"
  description: "Meat balls in tomato&basil sauce"
  service: "true"
  language: ""
-
  id: 722
  title: "Lunch - room 5"
  description: "Beef vindalloo gulash + wild rice + salad"
  service: "true"
  language: ""
-
  id: 723
  title: "Lunch - room 3"
  description: " Dumplings: russian and lentil + salad (vege)"
  service: "true"
  language: ""
-
  id: 729
  title: "Efficient Kotlin"
  description: "Code efficiency today is often treated indulgently. To a certain degree, it is reasonable. Memory is cheap and developers are expensive. Though at some point maybe your application runs on millions of devices and some battery use optimization might save enough energy to power a small city. Or maybe your company already pays lots of money for servers and their maintenance, and some optimization might make it significantly cheaper. Or even your application works well for a small number of requests but does not scale well and on the day of the trial it shuts down. In this session, I'll show you how to make an efficient Kotlin code cheaply, and how to optimize performance-critical parts of your code."
  language: ""
  speakers: [marmos]
-
  id: 731
  title: "Are immortal libraries ready for immutable classes?"
  description: "Just a concurrent programming or a job interview topic in the past, day to day class design practice now. For many teams “immutable first” becomes the norm not only for Value Objects or functional paradigm. It’s a natural consequence of constructors’ existence. Software is more and more complex, there is no place for additional effort just for objects’ state tracking. Despite everything, you can hear objections or whispers of temptation: “It can’t be immutable because of the framework”, “Don’t do it here, it is just an entity/service/DTO”, “We don't need another annotation, 5 on each field is enough”. I'll dispel these myths and show how to make popular Java libraries great tools again (persistence, serialization, mocks and other). They won’t tell you more how to code. Instead of writing God Classes, be a god of your code and write immutable classes whenever you want."
  language: ""
  speakers: [tomsko]
-
  id: 901
  title: "Registration & breakfast"
  description: ""
  service: "true"
  language: ""
-
  id: 902
  title: "Breakfast"
  description: ""
  service: "true"
  language: ""
-
  id: 904
  title: "Break"
  description: "The best time to take coffee or juice"
  service: "true"
  language: ""
-
  id: 905
  title: "Coffee Break"
  description: "The best time to talk with speakers and attendees"
  service: "true"
  language: ""
-
  id: 906
  title: "Lunch Break"
  description: ""
  service: "true"
  language: ""
-
  id: 907
  title: "Keynote"
  description: ""
  service: "true"
  language: ""
-
  id: 908
  title: "Opening ceremony"
  description: ""
  service: "true"
  language: ""
-
  id: 909
  title: "Closing ceremony"
  description: ""
  service: "true"
  language: ""
-
  id: 910
  title: "TBA"
  description: "To Be Announced"
  service: "true"
  language: ""
-
  id: 911
  title: "Lighting talk TBA"
  description: "Lighting talk - To Be Announced"
  service: "true"
  language: ""
-
  id: 912
  title: "Topic tables"
  description: "Join other attendees and share ideas, talk about the recent challenges, or find solution for a problem. During this session you can connect with other like-minded people in a space designated for certain languages, technologies, and interests.
<br/>1. Suggest a topic
<br/>Look for large white sheets of paper, and tell everyone what is on your mind! You can also tweet using #topicforgeecon hashtag. Vote for topics (mark it with line/x/heart) and like tweets to show others you’re interested.
<br/>2. Choose a room and have fun
<br/>We will group similar topics and assign a room. Topics will be pinned before room entrance (list of topics and rooms will be also posted using attendees slack channel - slack.geecon.cz), so you will be able to join others also interested in eg. Kotlin, JVM tuning, Machine learning or testability."
  language: ""
-
  id: 913
  title: "Open Spaces + Part @HEVRE, Beera Meiselsa 18 Street"
  description: ""
  service: "true"
  language: ""
-
  id: 990
  title: "Party"
  description: "Party time!"
  service: "true"
  language: ""

-
 id: 901
 title: "Registration & breakfast"
 service: true
-
 id: 902
 title: "Breakfast"
 service: true
-
 id: 904
 title: "Break"
 service: true
 description: "The best time to take coffee or juice"
-
 id: 905
 title: "Coffee Break"
 service: true
 description: "The best time to talk with speakers and attendees"
-
 id: 906
 title: "Lunch Break"
 service: true
-
 id: 907
 title: "Keynote"
 description: "Keynote"
 language: ""
-
 id: 909
 title: "Opening ceremony (Room 9)"
 language: ""
-
 id: 910
 title: "TBA"
 description: "To Be Announced"
 language: ""
-
 id: 990
 title: "Party and speakers dinner on a boat"
 service: true
 description: ""
-
  id: 165
  title: "Definition of done: Working software in production"
  description: "There is no business value with an unused product. Up until the point
when real users can start using the product the development is waste.
Waste is bad.

Let me show you a case study how I minimised the waste of unused
software at one customer. We went from an error prone, manual
deployment process to a fully automated one. We cut the deployment
time from hours to minutes. About three minutes. We also reduced the
risk, and therefore the anxiety, with deployment from high to low.
Small changes are inherently less scary.

It was simple, but not easy. I will show you how it was done in this case.

Don’t settle for second best; go for perfection. Go for continuous
deployment!"
  language: ""
  speakers: [thosun]
-
  id: 166
  title: "Hot code is faster code - addressing JVM warm-up"
  description: "What is the JVM warm-up problem, and how does it affect our software? How can we aid the runtime in optimising our programs, and is it even a good idea to do so? This presentation explores the lifecycle of Java code, and how the JVM evolves the runtime representation of code during program execution. From bytecode to assembly and back again (via some uncommon traps), we will cover practical tips on ensuring that Java code is running fast when it matters most."
  language: ""
  speakers: [marpri]
-
  id: 169
  title: "How to bake reactive behavior into your Java EE application"
  description: "Reactive programming is already an established concept and there are many modern frameworks and tools which support it. You need to understand the concept in order to build truly reactive applications. But you do not need to switch from what you already know in order to build them. With standard Java EE you have wide range of options to add reactive behavior to new and even existing applications.

You will witness that Java EE is a modern and evolving framework and you’ll learn how it supports reactive concepts by many examples and live demonstration. The latest version of Java EE together with Java 8 add even more asynchronous API to write fully reactive applications. On top of asynchronous processing in servlets, REST services and EJBs, there is CompletableFuture with its promise-like API to tackle callback hell. Several Java EE implementations, like Payara Micro, go even further and provide extensions to scale your applications in a natural way."
  language: ""
  speakers: [ondmih]
-
  id: 172
  title: "Six years of Scala and Counting"
  description: "The Scala language and its environment have been evolving quite significantly over the past few years. The adoption of the language is slowly growing and it can now even be found in use in rather conservative enterprise settings. At the same time there have been quite a few criticism of the language, its ecosystem and its practicability in larger teams. Many developers are still avoiding to have a more serious look at Scala and its ecosystem for a variety of reasons ranging from the fear of good tooling support to the apprehension of advanced category theory principles. This talk is a reflection upon six years of working professionally with Scala in projects of various size and shape. It aims at conveying some of the learnings and practical insights gained during that time as well as to debunk some of the many preconceptions that surround the language and its ecosystem."
  language: ""
  speakers: [manber]
-
  id: 173
  title: "Clojure, clojure.spec, and Beyond"
  description: "Clojure.spec is an exciting, new core library for Clojure. It enables pragmatic specifications for functions and brings a new level of robustness to building software in Clojure. We’ll take a tour of the library and then take it one step further by exploring its abilities with genetic programming. Finally, we’ll take a step back and think about how clojure.spec lets programs describe themselves and what it might mean to AI."
  language: ""
  speakers: [carmei]
-
  id: 174
  title: "DROP DATABASE - galactic story"
  description: "So You thought databases might be useful. I will show You why this is ridiculous idea. Database is just the thing that kill performance of you system (100 times), destroys design and pollutes code. Besides it causes a great loss of information. Really, if you care about your data do not make a mistake and do not put them into Tables, JSONs or whatever. You can do it better. During the presentations you will see how to code systems NORMALLY and compare it to weird things such as Hibernate or JPA. You will learn that best place for your data is RAM !!! :-) And this all from the guy who was writing JEE systems with SQL (and not only) for the last 15 years. This guy (me) was even kind of evangelist for JEE, and introduced Hibernate and JPA in a few companies. (I am do sorry for that). And we will be talking about facts. Code is here: <a href='https://github.com/airomem/galakpizza'>https://github.com/airomem/galakpizza</a>"
  language: ""
  speakers: [jarrat]
-
  id: 175
  title: "Java, JCP, Adopt-a-JSR & You - A Winning Combination"
  description: "Learn how to take part in Java technology evolution through the Java Community Process (JCP) program. You can participate as an individual, corporation, or nonprofit such as a Java user group (JUG). This session outlines why and how to participate in the JCP Program. You will also learn about the global Adoption programs and how you can participate in the programs. We will discuss details such as how to run hack days, collaborate with other JUG leads on Adopt-a-JSR activities, and review use cases from other JUGs around the world contributing to the Java EE 7 and Java SE 8 JSRs. Currently there are new JSRs being submitted and developed for the Java EE 8 and Java SE 9 platforms. Find out how you have contribute to the future editions of the Java Standard and Java Enterprise Editions."
  language: ""
  speakers: [heavan]
-
  id: 176
  title: "JVM dive for mere mortals"
  description: "For developers using Java on a daily basis, JVM is a pretty important component - it runs our software. But it is usually treated like a magic box, which takes code in and produces business features. Have you ever thought about what you are missing with such an approach? During my talk I'll cover some of the JVM internals which should not be avoided even during regular Java development. We'll discuss real differences between primitives and their wrappers, talk about the cost of using lambdas and streams, see what really gets erased in the type erasure process and what we can gain by removing stacktrace from our business exceptions."
  language: ""
  speakers: [jakkub]
-
  id: 177
  title: "Projectional Editing and Its Implications - JetBrains MPS"
  description: "Let’s shake some of the dogmas that constrain our programming worldview. In this session, I would like to take you to an alternative world - a world where programming languages are not parsed, a world where languages can be downloaded from the Internet and plugged easily into your IDE. A world where you have the power to customize the languages that you use.
You’ll see that projectional editing gives you incredible freedom in how you express your thoughts. It allows you to choose notations that best fit the task at hand. Your code can be edited as text, tables, diagrams, a form, or a combination of those. This is especially useful for Domain-specific languages and we’ll see real-life examples from domains such as the insurance industry, embedded software development, bioinformatics, enterprise systems and legislation. We’ll also discuss the downsides and integration challenges that projectional editors face.
My goal is that you’ll leave this session inspired, enriched and motivated to try something new."
  language: ""
  speakers: [vacpec]
-
  id: 178
  title: "Reverse engineering clean code"
  description: "This might be the psychology basic for developers... starting with the design 101; take some design principles and show how they are reflected in code. This talk takes one of design principles (from UX world - Norman's design of everyday things, memory model, psychology of short term memory - etc) and extrapolate it onto programming world, trying to distill some patterns and antipatterns in developers' approach to code."
  language: ""
  speakers: [jakmar]
-
  id: 179
  title: "Beyond lambdas - the aftermath"
  description: "As Java developers we are used to having rich ecosystems of libraries and tools that make our lives easier. As of the release of Java 8, we finally got our hands on building blocks like lambdas, optionals, and streams. All sorts of tools that help us write more concise code. But now, when the honeymoon is over, are there any downsides to Java 8 or is it a silver bullet? Are there any new anti-patterns emerging? Or subtle bugs caused by the new style of programming? Have there been any lessons learned? Are there any best practices?

If you are interested in learning about the challenges encountered when moving over to a functional style of Java programming, what code constructs to avoid, and best practices to use, well then this session is for you."
  language: ""
  speakers: [dansaw, dandeo]
-
  id: 180
  title: "Enterprise Java for the Cloud"
  description: "TBD"
  language: ""
  speakers: [dmikor]
-
  id: 181
  title: "Who’s Afraid of Graphs?"
  description: "Graphs are everywhere. Friended someone on Facebook? Graphs. Checked the best route to avoid traffic on Google Maps? Graphs. Those recruiters that keep spamming you with job offers on LinkedIn? They find you through graphs. We're surrounded by problems that can be best represented and solved through graphs, and yet graph databases and processing frameworks remain an obscure niche accessible mainly to data scientists and academics. It's time to right the injustice and bring graphs to the masses!
In this session you will learn about the various graph databases and data processing tools. You will hear about the types of problems that can be solved through graphs, what works best with graph databases, and what should be done with big data processing offline. You will see different ways of representing common use-cases in graph databases, various graph query languages, and learn about the advantages of migrating from relational databases with complex joins to graph databases. The talk includes demos of the various technologies, such as Neo4j, OrientDB, GraphX, Giraph, and others."
  language: ""
  speakers: [davost]
-
  id: 182
  title: "Hot Restart: reboot an In-memory Data Grid without losing data"
  description: "As RAM sizes reach into the terabyte range, modern application servers rely ever more on RAM caches for good performance, keeping almost all data in them. However, this makes the cost of application shutdown or crash much worse than just the downtime; it might take even days to gradually reconstruct the hot set in the caches.

This is where Hot Restart Persistence comes in: it backs up the data in purpose-built filesystem storage and efficiently reloads it on restart. I'll present the design used in Hazelcast, these are some highlights: log-structured storage; concurrent, incremental, generational garbage collection; pipelined multithreaded design of the reloading process; based on lock-free concurrent SPSC queues. On PCIe-attached SATA SSD the speeds achieved were 1.4 GB/s reloading throughput and 500,000 IOPS during regular operation (with 1 KB values). Fully synchronous persistence is also supported: concurrent operations are batched together so that the whole batch shares the cost of one fsync operation.

The presentation will include a live demo of Hot Restart Store with a visualization of the actions of the garbage collector."
  language: ""
  speakers: [martop]
-
  id: 183
  title: "New Java literals for the Brave and True"
  description: "Do you think you know your Java inside out? You know nothing, Jon Snow. I will show you that since Java 8 it's already possible to have nice and readable 'literals' not only for map or JSON but even HTML. You are just not brave enough to use them and maybe that's a good thing."
  language: ""
  speakers: [lukkre]
-
  id: 184
  title: "Java Annotations Are a Big Mistake"
  description: "Annotations were introduced in Java 5, and we all got excited. Such a great instrument to make code shorter! No more Hibernate/Spring XML configuration files! Just annotations, right there in the code where we need them. No more marker interfaces, just a runtime-retained reflection-discoverable annotation! I was excited too. Moreover, I've made a few open source libraries which use annotations heavily. Take jcabi-aspects, for example. However, I'm not excited any more. Moreover, I believe that annotations are a big mistake in Java design."
  language: ""
  speakers: [yegbug]
-
  id: 185
  title: "Become a Polyglot by learning Java! (Room 9)"
  description: "In a world running at breakneck speed to embrace JavaScript, it is refreshing to see a project that embraces Java to provides solution that deal with the new world and even improve it. I describe Truffle, a project that aim to build multi-language, multi-tenant, multi-threaded, multi-node, multi-tooling and multi-system environment on top of Java virtual machine with the goal to form the fastest and most flexible execution environment on the planet! Learn about Truffle and its Java API to become real polyglot, use the best language for a task and never ask again: Do I really have to use that crummy language? Jaroslav Tulach is the founder and initial architect of NetBeans, which is not just a well known IDE, but also the first modular desktop application framework written in Java. I have seen, made and helped to recover from many API design mistakes. Such experiences forced me to write a book titled “Practical API Design”. These days I am helping OracleLabs to design the API of Truffle which is the fastest virtual machine on the planet."
  language: ""
  speakers: [jartul]
-
  id: 186
  title: "Doing data science with Clojure: the ugly, the sad, the joyful"
  description: "Having programmers do data science is terrible, if only everyone else were not even worse. The problem is of course tools. We seem to have settled on either: a bunch of disparate libraries thrown into a more or less agnostic IDE, or some point-and-click wonder which no matter how glossy, never seems to truly fit our domain once we get down to it. The dual lisp tradition of grow-your-own-language and grow-your-own-editor gives me hope there is a third way.
This presentation is a meditation on how I approach data problems with Clojure, what I believe the process of doing data science should look like and the tools needed to get there. Some already exists (or can at least be bodged together); others can be made with relative ease (and we are already working on some of these); but a few will take a lot more hammock time."
  language: ""
  speakers: [simbel]
-
  id: 187
  title: "Big Data 101, all the foundations you need to bootstrap a new project in 2016"
  description: "BigData is quite trendy and now you're in a new project with Spark/Cassandra/Hadoop/<whatever_bleeding_edge_technology> to build the DataLake/<yet_another_wannabee_keyword> of the 21st century. To have a good start with the new world and all its concepts you'll need some foundational knowledge: - the CAP theorem, or 'pick 2 out of 3, no free lunch' - master/slave, multi-master and masterless architecture, advantages and drawbacks - can I distribute my computation ? Or how 'not to be confused by marketing bullshit around big data'"
  language: ""
  speakers: [duydoa]
-
  id: 188
  title: "One VM to Rule Them All"
  description: "Graal is a dynamic meta-circular research compiler for Java that is designed for extensibility and modularity. One of its main distinguishing elements is the handling of optimistic assumptions obtained via profiling feedback and the representation of deoptimization guards in the compiled code. Truffle is a self-optimizing runtime system on top of Graal that uses partial evaluation to derive compiled code from interpreters. Truffle is suitable for creating high-performance implementations for dynamic languages with only moderate effort. The presentation includes a description of the Truffle multi-language API and performance comparisons within the industry of current prototype Truffle language implementations (JavaScript, Ruby, and R). Both Graal and Truffle are open source and form themselves research platforms in the area of virtual machine and programming language implementation (<a href='http://openjdk.java.net/projects/graal/'>http://openjdk.java.net/projects/graal/</a>)"
  language: ""
  speakers: [jakpod, jansto]
-
  id: 189
  title: "Geospatial Graphs made easy with OrientDB"
  description: "Modeling and querying persistent data structures can be tricky when they involve semi-structured data, complex relationships (with deep traversal) and physical information like geographical positions, areas, shapes and so on. Bad news is that almost all your applications will have to manage such kind of data. In this presentation you will see how to use OrientDB v2.2 Document-Graph engine and its new Geospatial Indexes to efficiently manage and query connected, spatial information. Very few slides, a lot of live coding, I promise!"
  language: ""
  speakers: [luidel]
-
  id: 190
  title: "What is your application doing when you are not around?"
  description: "What is the 99th percentile of your app response time? How much time it takes to save data in the database? How not to get caught off-guard by service failure?

The answers are simple as long as you have the metrics. Metrics are the best source of information about your application inner workings, updated near real-time. Knowing what to measure and how to present the metrics gives you the reassuring 'my app is fine' feeling in times of peace and enables you to quickly identify the problem when things go south.

What should you measure, which tools to use and what are the caveats? How to store and display metrics? I will present the answers during my talk. Just a bit of theory and a lot of working code and examples, so you will know what your application is up to at any point of day or night."
  language: ""
  speakers: [adadub]
-
  id: 191
  title: "High performance instrumentation"
  description: "In this talk the lessons learned when crafting high performance instrumentation for extracting detailed data from the big data processing systems (Hadoop, Hive, Spark) will be presented.

We will focus on the best practices for using BTrace as well as less known, but powerful, features allowing to dramatically decrease the instrumentation overhead. Although BTrace will be used as the delivery vehicle for the instrumentation the same principles can be used for any other bytecode injecting technique or tool."
  language: ""
  speakers: [jarbac]
-
  id: 192
  title: "Apache Cassandra: building a production app on an eventually-consistent DB"
  description: "At Sky, we use Cassandra for database persistence in our Online Video Platform - the system which delivers all OTT video content to both Sky and NOW TV customers - and yes, that includes handling huge spikes in traffic both when there's a big Premier League football match and when a new Game of Thrones season comes online!

This talk aims to cover the following topics.
-  A brief introduction to Cassandra, including what it’s good for, what it’s not good for, and why.  We'll dig into how storage, reads, writes and conflict resolution work.
-  Gotchas in an eventually-consistent DB - some interesting problems we encountered and the lessons we learned the hard way.
-  Performing database schema and data evolution in Cassandra for a production app - why this is important, and what we did at Sky to ensure consistency of our database schema.

There will be two live demonstrations during the talk, using a 4-node Cassandra cluster in AWS."
  language: ""
  speakers: [oliloc]
-
  id: 193
  title: "Travel guide to continuous delivery"
  description: "With agile principles and practices reaching maturity, in many organizations the focus for the coming years will be on the next steps. Beyond agile. In fast pace organizations are adopting agile, DevOps, continuous delivery and new architectures such as microservices. Often all at once. Although from a perspective of similarities between these paradigms this makes sense, this also requires for increased collaboration between business, development and operations. During this session, Kim van Wilgen, head of IT at the Dutch insurance company Klaverblad, will give practical insights on their journey to continuous delivery with real-life pictures and stories. She'll be your guide through the journey to continuous delivery and tell you about the things to do or to avoid. How can organizations deal with the complexity of simultaneously changing architectures, ways of working, technology, and foremost culture? How do we make this journey comfortable and safe? How can we make the business case for continuous delivery? How can we deliver continuous delivery?"
  language: ""
  speakers: [kimvan]
-
  id: 194
  title: "Finding a needle in a haystack - JVM logging guide"
  description: "Despite the recent (over)flow of log processing tools logs are still highly problematic - they can clog your servers and bring your production down, they are hard to read and parse, and oh too often they miss out the key data you need but contain 3 billion lines of B.S. While log pipelines can help to some extent their value is limited when the source of data is low quality - and this talk is all about improving the quality of your logs. This talk will show various features of Log4j 1/2 and Logback, show various tricks to get the information you want (and only the information you want) and explain how to do this in way that is truly 'production grade'."
  language: ""
  speakers: [aviish]
-
  id: 195
  title: "Dirty Hacks With Java Reflection (Room 9)"
  description: "Java allows us to bypass language security and peek directly into the contents of objects, calling methods and even constructing them.  Usually this is fraught with danger.  It binds you to a particular Java version, blocking your upgrade path.  Dangerous.  That said, I use reflection a lot as a tool to quickly and accurately discover things about objects that would be difficult to determine any other way.  And then I throw the code away.  Knowing how reflection works can save you a lot of time when you need to confirm performance issues.  Whilst seldom a permanent solution, it can be a temporary hack until the architecture can be changed."
  language: ""
  speakers: [heikab]
-
  id: 196
  title: "Ten Productivity Tips for Java EE and Spring Developers"
  description: "In this live coding session, we'll build a Java EE application using JBoss Forge, deploy it onto Wildfly and test it using Arquillian. All of this is possible while barely writing a line of code! We'll also create a microservice using JBoss Swarm. If you're more into Spring we'll also show you how to create a Spring application from scratch, use Spring Boot and how you can rapidly develop you applications using JRebel. There will be a bunch of other tools and tips in this session, so if you want to write code like a pro, this is the session for you!"
  language: ""
  speakers: [simmap]
-
  id: 197
  title: "Machine learning by example"
  description: "Are the machines learning on their own? Wait, is Skynet already here? During this session we will tackle an easy Machine Learning problem, show how can it be processed on Spark including data cleaning, normalization and a learning process. Live coding session, but only if the machines don’t rise against us."
  language: ""
  speakers: [micmat]
-
  id: 198
  title: "Scala versus Kotlin versus Java8"
  description: "Foces on difference between those three programming languages in practical daily coding. What is missing in Scala compared to Java8. When are you missing if you stick with Java8. Jan has 7 years experience with Scala and followed Kotlin from very first day."
  language: ""
  speakers: [jankot]
-
  id: 199
  title: "Next Gen R&D: craft vs. chop-shop (Room 9)"
  description: "Build the ivory tower, show them all in, lock the doors, drill the pizza box hole and throw away the key. This is how many companies build R&D departments. Or, be agile, hire a product owner and let them do the talking so that the team is not distracted from the customers. Or, you can frighten everybody to death and let R&D do the talking. But what if they say something they should not? Or, will they? This is the story of making mistakes and how we unknowingly and then knowingly harnessed the power of transparency to win customers. Interested?"
  language: ""
  speakers: [ondkra]
-
  id: 200
  title: "Behavior Driven Development meets Karel Čapek"
  description: "Continuous integration, continuous delivery, automated testing, unit testing, system testing. We	 have been successful as an industry with shortening the feedback loop and developers are getting the test results on their freshly committed code instantaneously. However, are those tests really valid? Are they really as close to the real world as they should be? How do you cross the boundary between verification and validation? Jakub is going to share the bad and the ugly, and most importantly the good that we learned about testing. It’s not about testing, it’s about the results and how we are moving from software verification to product validation. And, how is it related to Karel Čapek? See for yourself!"
  language: ""
  speakers: [jakpav]
-
  id: 201
  title: "Effective and Clean Java Code? Tips and Tricks from the Real World"
  description: "Java has turned 20, but we still haven’t figured out how to create great Java code. Of course, we have examples of great developers and great code, but shouldn’t it be something common rather than unusual? We’ve seen Domain-Driven Design, Effective Java, Clean Code, Refactoring, Design Patterns.... But sometimes it’s still hard to apply all these great concepts in our projects. And we want to make proper use of encapsulation, immutability, the Law of Demeter, and lambdas. What we need is a proven set of tools, tips, and tricks gathered from successful real-world projects. We want to know how we can stop using basic types such as String, BigDecimal, List, and Map and how we can encapsulate information to craft great code. Attend this session to see code directly from the trenches."
  language: ""
  speakers: [edsyan]
-
  id: 202
  title: "Reactive Microservices with Vert.x"
  description: "Everybody is talking about microservices and reactive programming these days. And there’s a reason for that: the high-demand and high-scale distributed world that we have today, reacting to events in an asynchronous and non-blocking fashion seems the right approach to deal with scalability. And to achieve microservices you need a lightweight, fast, modular, high-performance and un-opinionated environment. Meet Vert.x: a toolkit for building reactive applications on the JVM.
Come to this session to see how you can use Vert.x to create reactive code using Java, Groovy, JavaScript or other JVM languages. We’ll demonstrate how to build Vert.x-based systems leveraging the unique Vert.x event bus for creating apps with real-time communications from the modern web browser to the cloud and back again. Have fun with a large number of live demonstrations that will cause you to reconsider your reliance on monolithics and consider leaving tradition behind for an event-driven, reactive, microservice-focused architecture."
  language: ""
  speakers: [bursut]
-
  id: 203
  title: "The Sweet Spot"
  description: "Software developers keep looking to CQRS as an architecture to boost performance. But the more I work with companies the more I discover there's a sweet spot where Theory of Constraints, Kanban, CQRS, Domain-Driven Design, EventStorming and UX blend together to solve 'the really real problems'.

Once you're there, a land of opportunities ready to be caught sits in front of you. Why waiting?
"
  language: ""
  speakers: [albbra]
-
  id: 204
  title: "Go Faster"
  description: "The industry is replete with fresh topics: DevOps, Cloud Computing, MicroServices, Lean
Startup, Fullstack
Developers, Agile Variations, and the like. Having seen all these at
conferences, there is an emerging theme around all these topics: Go Faster.
Going faster is an old theme; I have heard it for over four decades. But the business incentives
for it are more powerful than ever because competitors have become unfettered from traditional
barriers:
<li>Massive, free application frameworks replace expensive vendor packages
</li><li>Ondemand
computing replaces expensive, preplanned
machine installations
</li><li> Worldwide
access to customers through social networks replaces dedicated sales
teams</li>

So either you go faster, or a competitor will emerge who is faster.
In this presentation, I identify three categories of inhibitors, and suggest mitigation strategies I
have employed for each one:
<li>Technology inhibitors, whether dealing with legacy languages, tools, or architectures,
</li><li>Process inhibitors, particularly daunting as shifts to faster processes run counter to the
“tried and true” processes inherent in the organization, and
</li><li> Organization inhibitors as we shake off the timeconsuming
waterfall structures.</li>


Embracing the technology change is not sufficient. Going faster can be crippled if supporting IT
processes are not implemented. We wrap up by addressing the impact to roles and
responsibilities, a challenging and key aspect of going faster . We will delve into some detail on
an implementation in a large, traditional business."
  language: ""
  speakers: [fregeo]
-
  id: 205
  title: "TDD: That's not what we meant"
  description: "TBD"
  language: ""
  speakers: [stefre]
-
  id: 206
  title: "Thirty months of Microservices. Stairway to heaven or highway to hell?"
  description: "TBD"
  language: ""
  speakers: [sanhoo]
-
  id: 207
  title: "Caught in the Act: Kotlin Bytecode Generation and Runtime Performance"
  description: "In this talk, we'll dive into the details of how various language features supported by Kotlin are translated to Java bytecode. We'll use the JMH microbenchmarking tool to study the relative performance of various constructs and to understand how we can ensure top performance of the Kotlin code that we write."
  language: ""
  speakers: [dmijem]
-
  id: 208
  title: "Need for speed: tools for JVM tuning"
  description: "Monitoring your production JVMs is extremely important. Though, not always you have a luxury of having direct access to production servers, which suffer from performance peaks, memory leaks or concurrency issues. Not always you are able to catch JVM issues without an ability to debug the code in-place. There are quite many tools that can help analyzing performance issues of your JVMs based on real-time monitoring data as well as on logs available only post-mortem. This presentation will give an overview of these tools."
  language: ""
  speakers: [andada]
